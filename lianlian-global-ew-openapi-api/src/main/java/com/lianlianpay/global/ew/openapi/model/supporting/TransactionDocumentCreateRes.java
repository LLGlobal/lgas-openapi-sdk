package com.lianlianpay.global.ew.openapi.model.supporting;

import lombok.Data;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 * @author huyl
 * @since 2025/4/29
 */
@Data
public class TransactionDocumentCreateRes implements Serializable {

    private static final long serialVersionUID = 1L;


    /**
     * The idempotent value generated by the client must be unique on each request. Conversion requests with the same request_id will be rejected. The parameter contains a maximum of 64 characters.
     */
    private String requestId;

    /**
     * Merchant ID as known by the client platform.
     */
    private String merchantClientId;

    /**
     * Number of contract
     * Required if business_type = GOODS_TRADE
     */
    private String contractNo;

    /**
     * Enum: "ECOMMERCE" "GOODS_TRADE"
     * The type of business.
     */
    private String businessType;

    /**
     * Enum: "GOODS" "SERVICES"
     * Order type.
     * Required if business_type=ECOMMERCE
     */
    private String originalOrderType;

    /**
     * Purpose of the transaction document.
     * Required if business_type = GOODS_TRADE
     */
    private String purpose;

    /**
     * Enum: "BENEFICIARY" "PAYER"
     * The party who own this transaction document. Must be transferred if the currency of the parties to the transaction involves a currency controlled by a currency controlled country. (e.g. when payment is made in the currency of CNY in the CN region) Enum: "BENEFICIARY" When the recipient receives funds in a currency that is a controlled currency of a currency-controlled country. "PAYER" When the currency of payment by the payer is a controlled currency of a currency-controlled country.
     */
    private String ownerType;

    /**
     * The id of the party who own this transaction document. Must be transferred if the currency of the parties to the transaction involves a currency controlled by a currency controlled country. (e.g. when payment is made in the currency of CNY in the CN region)
     */
    private String ownerId;

    /**
     * Enum: "REGULAR" "CUSTOMS" "WITHOUT_SETTLE"
     * The template of transaction document.
     * REGULAR: Ordinary foreign exchange settlement with a declaration code of 122030.
     * CUSTOMS: Customs-declared foreign exchange settlement with a customs declaration and declaration code is 121010
     * WITHOUT_SETTLE: No foreign exchange settlement needed
     */
    private String template;

    /**
     * The unique identifier of the transaction document
     */
    private String transactionDocumentId;

    /**
     * Business details
     */
    private TransactionDocumentCounterparty counterpartyDetails;

    /**
     * Creation time for this trade. Measured in milliseconds since the Unix epoch. It's a long type number.
     * Required if business_type=ECOMMERCE.
     */
    private Date tradeTime;

    /**
     * Currency of trade (in three-letter ISO 4217 format).
     */
    private String tradeCurrency;

    /**
     * The amount of trade, main currency unit, rounded up to 2 decimal places.
     */
    private String tradeAmount;


    /**
     * Business details
     */
    private TransactionDocumentBusinessDetails businessDetails;

    /**
     * memo
     * Required if business_type ="ECOMMERCE"
     */
    private String memo;

    /**
     * The creation time of transaction documents.
     */
    private Date createTime;

    /**
     * The update time of transaction documents.
     */
    private Date updateTime;

    /**
     * Enum: "PROCESSING" "SUCCEEDED" "FAILED"
     * The status of transaction documents
     */
    private String status;

    /**
     * Failure code Might return if status = "FAILED"
     */
    private String failureCode;

    /**
     * Failure details Might return if status = "FAILED"
     */
    private String failureReason;

    /**
     * The total amount of quota, main currency unit, rounded up to 2 decimal places.
     */
    private String totalQuota;

    /**
     * The available quota of transaction documents.
     */
    private String availableQuota;

    /**
     * The used quota of transaction documents.
     */
    private String usedQuota;

    /**
     * The left amount of quota for receiving, main currency unit, rounded up to 2 decimal places.
     */
    private String availableQuotaReceive;

    /**
     * Usage amount of quota for receiving, main currency unit, rounded up to 2 decimal places.
     */
    private String usedQuotaReceive;

    /**
     * The left amount of quota for receiving, main currency unit, rounded up to 2 decimal places.
     */
    private String availableQuotaPayout;

    /**
     * Usage amount of quota for receiving, main currency unit, rounded up to 2 decimal places.
     */
    private String usedQuotaPayout;
}
